#!/bin/bash
#description: runs in parallel all that is provided as standard input

trap 'exit 0' HUP
trap 'kill -s HUP 0' EXIT

if [ ! $MAX_PROCESSES ]; then MAX_PROCESSES=10; fi
if [ ! $MAX_WAIT ]; then MAX_WAIT=10; fi

echo "[p:00000] max processes: $MAX_PROCESSES"
echo "[p:00000] max wait: $MAX_WAIT"

CUR_PROCESS=0

foreach-input $@ | while true
do
	if [ `jobs -l | wc -l` -lt $MAX_PROCESSES ]
	then
		read PROCESS

		if [ ! "$PROCESS" ]
		then
			break
		fi

		echo "[p:00000] executing: $PROCESS"

		CUR_PROCESS=`expr $CUR_PROCESS + 1`

		($PROCESS 2>&1 | while read LINE; do echo "[p:`printf %.5d $CUR_PROCESS`] $LINE"; done) &
	else
		echo "[p:00000] currently running pids:" `jobs -l | grep -E '^\[[0-9]+\]' | awk '{ print $2 }'`
		echo "[p:00000] sleeping: $MAX_WAIT"
		sleep $MAX_WAIT
	fi
done

if [ `jobs -l | wc -l` -gt 0 ]
then
	echo "[p:00000] finishing pids:" `jobs -l | grep -E '^\[[0-9]+\]' | awk '{ print $2 }'`
	wait
fi

echo "[p:00000] done"
